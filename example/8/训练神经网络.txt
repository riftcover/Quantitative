#导入神经网络库pybrain
from pybrain.tools.shortcuts import buildNetwork
#导入用于标准的监督学习SupervisedDataSet类
from pybrain.datasets import SupervisedDataSet
#导入trainer训练模块
from pybrain.supervised.trainers import BackpropTrainer
#导入激活函数TanhLayer
from pybrain.structure import TanhLayer
#创建一个变量名为net的神经网络，输入层为2个节点，隐藏层为3个节点，输出层为1个节点,隐藏层激活函数为TanhLayer，使用偏置因子
net = buildNetwork(2, 3, 1, bias=True, hiddenclass=TanhLayer)
#定义变量ds为具有双输入和单输出的数据集
ds = SupervisedDataSet(2, 1)
#为变量ds数据集添加数据
ds.addSample((0, 0), (0))
ds.addSample((0, 1), (1))
ds.addSample((1, 0), (1))
ds.addSample((1, 1), (0))
#训练神经网络
trainer = BackpropTrainer(net, ds)
#调用train()方法只能训练一个完整时期的网络,并返回一个误差值。
trainer.train()
#如果我们要训练网络直到网络收敛,还有另一种方法trainUntilConvergence()
trainer.trainUntilConvergence()
